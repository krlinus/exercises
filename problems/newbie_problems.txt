For ABSOLUTE newbies
Questions - make sure you understand these before starting:
.01 - what is a "computer language"
.02 - what is computer memory. What is it made of. How do bits turn off and on?
.03 - What is a variable. What is variable naming. What does a variable name mean to the computer/compiler
.04 - what is a literal
.05 - what is an operator
.06 - what is an expression
.07 - what is a keyword
.08 - what is a statement
.09 - statement terminator (;, end of line, etc)
.10 - statement demiliter (, etc)
.11 - what common types of statements exist
.12 - what are data types and why do we need to classify them
.13- How do you specify the value of a variable, for each type of data
.14- what is an escape character.
.15- how to print the escape character (did this question occur to you? If so you have been paying attention)

.16 - You have a few devices listed below. Make tea.
Heater, filter, container, glass
.17 - In the above, do you have everything you need? What is missing?
(try tea powder/leaves/bag, water, milk, sugar)
.18 - In the above two what components can be thought of as data, what parts belong to the procedure? and what is the relation
between the "data", "procedure" and "outcome". Think and discuss. How can you relate this with a computer program
.19 - what is a "function". Does this word have any relation to mathematics or have any similarity?
.20 - what is a library (hint: it is not the place you borrow books from)

For other newbies
Q1. - Write a program that prints ‘Hello World’ to the screen. From the above list, what concept/s was/were put into use 
(variables, for example)

===============================================

Q2. - Write a program that asks the user for her name and greets her with her name. From the above list, what 
concept/s was/were put into use (variables, for example)

===============================================


Q3. - Modify the previous program such that only the users Alice and Bob are greeted with their names.

===============================================


Q4. - Sum "A+B"
input data:
3 5

answer:
8

===============================================


Q5. - Rounding
Input a fractional number. If the fractional part if .5 or more round the number to next integer, else round it 
down to the base integer

===============================================


Q6. - Fahrenheit to Celsius
You are to write program to convert degrees of Fahrenheit to Celsius.
Input: A temperature in Fahrenheit
Output: value, in celcius
Note: [°C] = ([°F] − 32) × 5⁄9

===============================================


Q7. - vowel count
Lines consist only of lowercase English (Latin) letters and spaces.
Answer should contain the number of vowels in line

Input
pear tree

Output
4

===============================================


Q8. - Write a program that asks the user for a number n and prints the sum of the numbers 1 to n

===============================================


Q9. - Modify the previous program such that only multiples of three or five are considered in the sum, e.g. 3, 5, 6, 9, 10, 12, 15
for n=17

===============================================

Q10. - Sum in Loop
input data:
8
10 20 30 40 5 6 7 8

answer:
126


===============================================

Q11. - Write a program that prints a multiplication table for numbers up to 12.

===============================================


Q12. - Minimums of Two
Of two numbers, please, select one with minimum value. Here are several pairs of numbers for thorough testing.

Input data will contain number of test-cases in the first line.
Following lines will contain a pair of numbers to compare each.
For Answer please enter the same amount of minimums separated by space, for example:

data:
3
5 3
2 8
100 15

answer:
3 2 15

===============================================


Q13. - Sum of three
 multiply A by B and add C. Then sum the digits
 Input 
 8 3 2
 
 Output:
1
explanation:
 8 * 3 + 2 => 26 => 2 + 8 => 10 => 1+0 => 1

===============================================


Q14. - Sums in loop: Input data will contain the total count of pairs to process in the first line.
The following lines will contain pairs themselves - one pair at each line.
Answer should contain the results separated by spaces.

data:
3
100 8
15 245
1945 54

answer:
108 260 1999

===============================================


Q15. - Minimum of Three
Input data will contain in the first line the number of triplets to follow.
Next lines will contain one triplet each.
Answer should contain selected minimums of triplets, separated by spaces.
data:
3
7 3 5
15 20 40
300 550 137

answer:
3 15 137

===============================================


Q16. - Median of three: print the middle number.
Input
3 7 5

Output
5
explanation: Sort the numbers, then take the middle number

Input
3 7 5 4

Output
5
explanation. here 4 and 5 are in the middle. Take the average of the two, then round up.

===============================================

Q17. - Check prime
Input a number. If it is a prime, print YES else print NO

===============================================


Q18. - Write a program that prints all prime numbers. (Note: if your programming language does not support arbitrary size numbers,
printing all primes up to the largest number you can easily represent is fine too.)

===============================================


Q19. - Write a guessing game where the user has to guess a secret number. After every guess the program tells the user whether their
number was too large or too small. At the end the number of tries needed should be printed. I counts only as one try if they
input the same number multiple times consecutively.

===============================================


Q20. - Write a program that prints the next 20 leap years.

===============================================

Q21. - Search 101
For this problem, you must allow the user to enter exactly 5 numbers as initial input.
The program must then ask for an additional number.

The output of the program will indicate whether the last number is contained in the first 5 numbers.
Your output should resemble that provided in the example below.

All of the numbers that will be entered are integers.

Example 1

Enter a number: 1
Enter a number: 2
Enter a number: 5
Enter a number: 10
Enter a number: 15
Enter the number to be searched: 10

The number 10 appears in the first 5 numbers.

Example 2

Enter a number: 10
Enter a number: 20
Enter a number: 30
Enter a number: 40
Enter a number: 50
Enter the number to be searched: 60

The number 60 does not appear in the first 5 numbers

===============================================


Q22. - Binary to decimal converter
A binary number is a sequence of bits (binary digits – 0’s and 1’s) of the form
BnBn-1……B1 B0, where each Bi is a bit.

The decimal equivalent is calculated by Bn * 2n+ Bn-1 * 2n-1 + … + B1 * 2 + B0.

Write a program to input a binary number and output the decimal equivalent.

The sample input will not have more than 8 individual bits (i.e., the largest value to be entered is 11111111).

Example 1

Enter binary number: 101
In decimal: 5

Example 2

Enter binary number: 11111
In decimal: 31

===============================================


Q23. - Pushups with Blaze
At UAB football games, Blaze does push ups after each Blazer score. After the first Blazer touchdown (and point after), Blaze
does 7 push ups. After the second touchdown and point after, the score is now 14 and Blaze does 14 push ups.

Write a program that calculates how many total push ups Blaze does during the whole game. Assume that only 7 point touchdowns
(including the point after) occur. Prompt for the final score and print out how many push ups Blaze has done.

Example 1:
Enter final score: 21
Push ups: 42

Example 2:
Enter final score: 7
Push ups: 7

===============================================


Q24. - Valid identifier checker
An identifier in Java, C++ and most other programming languages must begin with a letter and then may be followed by any number
of letters or digits.

It is possible that underscores (_) will also appear, but only in the middle and never two consecutively.

Write a program to read a string and output whether it is a valid or invalid identifier. Each string will be 10 characters or
less in size.

Example 1:
Enter id: UAB_HSPC
Answer: UAB_HSPC is a valid identifier

Example 2:
Enter id: a_b_c__2
Answer: a_b_c__2 is not a valid identifier

===============================================

Q25. - password checker
Write a program that will validate a password.

Password must have,
1) 8 to 12 characters
2) at least one numeric digit
3) at least one alphabet
4) must not have space or slash (/)
5) at least one Capital letter
6) starting character must not be a number 

===============================================

Q26. - Do You Have Enough Money?

General Statement:
Read the amount of money you have and the prices of the items you intend to buy. Determine whether you have enough money to buy
everything you selected or whether you are short of money. If you do not have enough money, indicate the amount of the
shortfall. Be sure to include 8% tax when figuring the amount you need.

Input:
There are an unknown number of money amounts in the data set. The value –1 is used to indicate the end of the collection of
prices. The first value is the money in the purse.

Output:
All letters are to be upper case. Include the amount of shortfall if you do not have enough money. This money amount is to have
a dollar sign ($) in front of the amount and it is to be rounded to 2 decimal places. The output is to be formatted exactly 
like that for the sample output given below.

Assumptions:
The –1 used to indicate the end of a data collection is not part of the data for the problem.

Sample Input:
10.50 7.60 1.26 3.49 -1
Sample Output:
$2.84 SHORT

Sample Input:
15.75 6.00 3.98 -1
Sample Output:
ENOUGH MONEY

Sample Input:
21.00 5.25 5.75 4.76 3.98 1.50 -1
Sample Output:
$1.94 SHORT

===============================================


Q27. - Parallelogram Words

General Statement:
Output a given word horizontally and multiple times vertically so that each letter in the horizontal word matches the position
of that letter vertically.

Input:
The first line in the data set is an integer that represents the number of words that follow. Each word is on a separate line.

Output:
The horizontal word is to be in the center of the output. Each vertical word is to read down from the top. The first vertical
word uses the first letter of the horizontal word. The last vertical word uses the last letter of the horizontal word.

All outputs are to have the same left edge vertically.

The output is to be formatted exactly like that for the sample output given below.

Assumptions:
All letters are upper case. The maximum word length is 10.

Sample Input:
TEST
Sample output:
   T
  TE
 TES
TEST
EST
ST
T

Sample Input:
SAMPLE
Sample output:
     S
    SA
   SAM
  SAMP
 SAMPL
SAMPLE
AMPLE
MPLE
PLE
LE
E

Sample Input:
ART
Sample output:
  A
 AR
ART
RT
T

===============================================


Q28. - Where Does It Fit?

General Statement: For an input word, determine whether it is alphabetically located before the word EXERCISE, after the word
MUSCLES, or between EXERCISE and MUSCLES.

Input: The first line of the data set for this problem is an integer that represents the number of words in the list. Each word
is on a separate line

Output: The output is to be formatted exactly like that for the sample output given below.

Assumptions: All letters are upper case.

Sample Input:
4
REST
ACHE
STRETCH
GYM

Sample Output:
REST IS AFTER MUSCLES
ACHE IS BEFORE EXERCISE
STRETCH IS AFTER MUSCLES
GYM IS BETWEEN EXERCISE AND MUSCLES

Q29. Weird or not.
Given an integer, n, perform the following conditional actions:

    If n is odd, print Weird
    If n is even and in the inclusive range of to , print Not Weird
    If n is even and in the inclusive range of to , print Weird
    If n is even and greater than , print Not Weird

Complete the stub code provided in your editor to print whether or not is weird.

Input Format

A single line containing a positive integer, n.

Constraints
1>=n>=100

Output Format

Print Weird if the number is weird; otherwise, print Not Weird.

Sample Input 0: n = 3

3

Sample Output 0

Weird

Sample Input 1: n = 24

24

Sample Output 1

Not Weird

Explanation

Sample Case 0:
n is odd and odd numbers are weird, so we print Weird.

Sample Case 1:
n > 20 and n is even, so it isn't weird. Thus, we print Not Weird.

===============================================


Credits where due (and carrying forward to ultimate origin): 
https://adriann.github.io/programming_problems.html
http://www.codeabbey.com
https://tausiq.wordpress.com
hackerrank.com


